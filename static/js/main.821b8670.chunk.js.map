{"version":3,"sources":["services/api.js","pages/HomePage/index.jsx","routes.tsx","App.tsx","index.tsx"],"names":["baseURL","axios","create","HomePage","props","useState","markdownURL","setMarkdownURL","markdown","setMarkdown","useEffect","api","get","then","data","links","document","getElementsByTagName","console","log","length","onclick","index","e","preventDefault","finalURI","lastRoute","split","pathname","replace","transformImageUri","uri","typeFile","splitURIinArray","foldersAbove","reduce","acumulator","value","countFoldersAbove","actualPath","filter","element","includes","join","removeMdFiles","item","removeBlank","pop","pathToJoin","substring","lastIndexOf","uriHrefA","source","Routes","path","component","App","className","ReactDOM","render","getElementById"],"mappings":"oNACaA,EAAU,6DACRC,E,OAAAA,EAAMC,OAAO,CACxBF,YCkGWG,MA9Ff,SAAkBC,GAAO,MAEeC,mBAAS,cAFxB,mBAEhBC,EAFgB,KAEHC,EAFG,OAGSF,mBAAS,IAHlB,mBAGhBG,EAHgB,KAGNC,EAHM,KAkFvB,OA9EAC,qBAAU,WACRC,EAAIC,IAAIN,GACPO,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAWL,EAAYK,QAE9B,CAACR,IAEFI,qBAAU,WACR,IAAIK,EAAQC,SAASC,qBAAqB,KAE1C,GADAC,QAAQC,IAAIJ,GACTA,EAAMK,OAAS,EAAE,CAElBF,QAAQC,IAAIJ,EAAM,GAAGM,SACrB,IAHkB,eAGTC,GACPP,EAAMO,GAAOD,QAAU,SAACE,GACtBA,EAAEC,iBACF,IAAMC,EAAW,WACf,IAAMC,EAAYpB,EAAYqB,MAAM,KACpC,MAAM,GAAN,OAAUZ,EAAMO,GAAOM,SAASC,QAAQ,YAA9B,UAA6CH,EAAUA,EAAUN,OAAO,GAAxE,QAEZF,QAAQC,IAAIM,KACZlB,EAAekB,OARVH,EAAQ,EAAGA,EAAQP,EAAMK,OAAQE,IAAU,EAA3CA,MAaX,CAACd,IAsDD,6BACA,4BAAKF,GACH,kDACA,kBAAC,IAAD,CACEwB,kBAAmB,SAACC,GAAD,gBAAY/B,EAAZ,YAzDP,SAAC+B,EAAIC,GAerB,SAASC,EAAgBF,GACvB,OAAOA,EAAIJ,MAAM,KAGnB,IAAMO,EAfN,SAA2BH,GACzB,OAAOA,EAAIJ,MAAM,KAAKQ,QAAO,SAACC,EAAYC,GAIxC,MAHa,OAAVA,GACDD,IAEKA,IACP,GASiBE,CAAkBP,GAQnCQ,GA1BJ,SAAuBR,GACdA,EAAIS,QAAO,SAAAC,GAAO,OAAKA,EAAQC,SAASV,MAAWW,KAAK,KAqB7CC,CAAcX,EAAgBF,IAIjCE,EAAgB3B,IACjCiC,EAhBA,SAAqBR,GACnB,OAAOA,EAAIS,QAAO,SAAAK,GAAI,MAAY,KAARA,KAefC,CAAYP,GAKzB,IAAK,IAAIjB,EAAQ,EAAGA,GAASY,EAAcZ,IAEzCiB,EAAWQ,MAEbR,EAAaA,EAAWI,KAAK,KAG7B,IAAIK,EAAajB,EAAIkB,UAAUlB,EAAImB,YAAY,OAAQ,GAAGrB,QAAQ,KAAM,KASxE,MARqB,MAAlBmB,EAAW,KACZA,EAAU,WAAOA,IAIJ,UAAMT,GAAN,OAAmBS,GAWYG,CAASpB,EAAI,SAEvDqB,OAAQ5C,MC7FD,SAAS6C,IACpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,YAAYC,UAAWpD,MCHpC,SAASqD,IAEtB,OACE,yBAAKC,UAAU,OACb,kBAACJ,EAAD,OCJNK,IAASC,OAAO,kBAACH,EAAD,MAASxC,SAAS4C,eAAe,U","file":"static/js/main.821b8670.chunk.js","sourcesContent":["import axios from 'axios'\r\nexport const baseURL = 'https://raw.githubusercontent.com/NicholasWM/cc2020/master'\r\nexport default axios.create({\r\n    baseURL\r\n})\r\n","import React, {useEffect, useState} from 'react';\r\nimport ReactMarkdown from 'react-markdown'\r\nimport api, {baseURL} from '../../services/api'\r\n// import CodeBlock from \"./CodeBlock\";\r\n// import './global.css'\r\n\r\n\r\nfunction HomePage(props) {\r\n  // const [markdownURL, setMarkdownURL] = useState(String(props.location.pathname.split('/').filter((value, index) => index > 1).join('/')))\r\n  const [markdownURL, setMarkdownURL] = useState(\"/README.md\")\r\n  const [markdown, setMarkdown] = useState(\"\")\r\n  useEffect(()=>{\r\n    api.get(markdownURL)\r\n    .then(({data})=> setMarkdown(data))\r\n  }\r\n  ,[markdownURL])\r\n\r\n  useEffect(()=>{\r\n    let links = document.getElementsByTagName('a')\r\n    console.log(links)\r\n    if(links.length > 0){\r\n\r\n      console.log(links[0].onclick)\r\n      for (let index = 0; index < links.length; index++) {\r\n        links[index].onclick = (e) => {\r\n          e.preventDefault();\r\n          const finalURI = () => {\r\n            const lastRoute = markdownURL.split('/')\r\n            return `${links[index].pathname.replace('markdown/',`${lastRoute[lastRoute.length-2]}/`)}`\r\n          }\r\n          console.log(finalURI())\r\n          setMarkdownURL(finalURI())\r\n        }\r\n        \r\n      }\r\n    }\r\n  },[markdown])\r\n  const uriHrefA =  (uri,typeFile) => {\r\n    function removeMdFiles(uri) {\r\n      return uri.filter(element => !element.includes(typeFile)).join('/')\r\n    }\r\n    function countFoldersAbove(uri) {\r\n      return uri.split('/').reduce((acumulator, value)=> {\r\n        if(value === '..'){\r\n          acumulator++\r\n        }\r\n        return acumulator\r\n      },0)\r\n    }\r\n    function removeBlank(uri) {\r\n      return uri.filter(item => item !=='')\r\n    }\r\n    function splitURIinArray(uri) {\r\n      return uri.split('/')\r\n    }\r\n    // Busca ../ e conta quantas pastar tem que subir\r\n    const foldersAbove = countFoldersAbove(uri)\r\n    // console.log(\"foldersAbove -> \",foldersAbove)\r\n\r\n    // Formata a URI e retira o arquivo.md\r\n    const uriFormated = removeMdFiles(splitURIinArray(uri))\r\n    // console.log(`uriFormated -> ${uriFormated}`);\r\n    \r\n    //Formata o path atual e remove vazios\r\n    let actualPath = splitURIinArray(markdownURL)\r\n    actualPath = removeBlank(actualPath)\r\n    // console.log(\"actualPath -> \" ,actualPath);\r\n    \r\n    // De acordo com a quantidade de pastas para subir\r\n    // Elimina os items mais abaixo at√© chegar na pasta acima\r\n    for (let index = 0; index <= foldersAbove; index++) {\r\n      // console.log('Eliminando')\r\n      actualPath.pop()\r\n    }\r\n    actualPath = actualPath.join('/')\r\n    // console.log(\"actualPath -> \",actualPath)\r\n\r\n    let pathToJoin = uri.substring(uri.lastIndexOf(\"../\") +1).replace('./', '/')\r\n    if(pathToJoin[0] !== '/'){ \r\n      pathToJoin = `/${pathToJoin}`\r\n    }\r\n    // console.log(\"pathToJoin -> \",pathToJoin);\r\n\r\n    const finalPath = `${actualPath}${pathToJoin}` \r\n    // console.log(\"finalPath -> \",finalPath);\r\n    \r\n    return finalPath\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n    <h1>{markdownURL}</h1>\r\n      <h1>Markdown Component</h1>\r\n      <ReactMarkdown \r\n        transformImageUri={(uri) => `${baseURL}/${uriHrefA(uri,'.md')}`}\r\n        // transformLinkUri={(uri) => `/markdown/${uriHrefA(uri,'.md')}`}\r\n        source={markdown}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default HomePage;\r\n","import React from 'react'\r\nimport { Route, Switch, BrowserRouter} from 'react-router-dom'\r\nimport HomePage from './pages/HomePage'\r\nexport default function Routes() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path='/markdown' component={HomePage}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}","import React from 'react';\nimport Routes from './routes'\n// import './global.css'\n\nexport default function App() {\n\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}